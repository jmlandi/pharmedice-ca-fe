// Teste de Apelidos com Caracteres Especiais
console.log('üß™ Teste de Apelidos com Caracteres Especiais');
console.log('='.repeat(50));

// Simulando as valida√ß√µes dos formul√°rios
const validateNickname = (nickname) => {
    const errors = [];
    
    if (!nickname.trim()) {
        errors.push('O apelido √© obrigat√≥rio');
    } else if (nickname.length < 3) {
        errors.push('O apelido deve ter pelo menos 3 caracteres');
    } else if (nickname.length > 30) {
        errors.push('O apelido deve ter no m√°ximo 30 caracteres');
    } else if (!/^[A-Za-z√Ä-√ø0-9\s]+$/.test(nickname)) {
        errors.push('O apelido deve conter apenas letras, n√∫meros e espa√ßos');
    }
    
    return {
        isValid: errors.length === 0,
        errors: errors
    };
};

const testCases = [
    'Jo√£o',
    'Jos√©',
    'Maria Jos√©',
    'Jo√£o123',
    '√á√£o',
    'A√ß√£o Especial',
    'Andr√©',
    'Jos√© da Silva',
    'Jo√£o@email',
    'Test_user',
    'user-name',
    'Jo√£o#123',
    '√Ä√°√¢√£√§√•√¶√ß√®√©√™√´',
    'Jo√£o √á√£o 123'
];

console.log('\nResultados dos testes:');
console.log('-'.repeat(50));

testCases.forEach(nickname => {
    const result = validateNickname(nickname);
    const status = result.isValid ? '‚úÖ' : '‚ùå';
    const errorMsg = result.errors.length > 0 ? ` - ${result.errors[0]}` : '';
    console.log(`${status} '${nickname}'${errorMsg}`);
});

console.log('\nüìã Resumo:');
const validCount = testCases.filter(name => validateNickname(name).isValid).length;
console.log(`‚úÖ V√°lidos: ${validCount}/${testCases.length}`);
console.log(`‚ùå Inv√°lidos: ${testCases.length - validCount}/${testCases.length}`);